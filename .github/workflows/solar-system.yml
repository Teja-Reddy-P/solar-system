name: Solar-System-Project

on:
    workflow_dispatch: 
    push: 
        branches: 
            - main
            - 'feature/*'
env:
   MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
   MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
   MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}  # Added the environment variables into repositiory level variables and secrets into github.
jobs:
    unit_testing:
        name: Unit testing
        strategy:
            matrix:
                nodejs_version: [18, 19, 20]
                operating_system: [ubuntu-latest, macos-latest]
                exclude:
                   - nodejs_version: 18
                     operating_system: macos-latest
        runs-on: ${{ matrix.operating_system}}
        steps:
            - name: Checkout the Repository
              uses: actions/checkout@v4

            - name: Install Nodejs version - ${{ matrix.nodejs_version }}
              uses: actions/setup-node@v3
              with:
                node-version: ${{ matrix.nodejs_version }}
            
            - name: Cache NPM Dependencies
              uses: actions/cache@v3
              with:
                path: node_modules
                key: ${{ runner.os}}-node_modules-${{ hashFiles('package-lock.json')}}
                 

            - name: Install Dependencies
              run: npm install
            
            - name: Run Unit Testing
              run: npm test

            - name: Archive/Upload Artifcat
              uses: actions/upload-artifact@v3
              with:
                name: sai-test-latest-results
                path: test-results.xml

    code-coverage:
        name: Code coverage
        runs-on: ubuntu-latest
        steps:
          - name: Checkout The Repo
            uses: actions/checkout@v4
          - name: setup nodejs version
            uses: actions/setup-node@v3
            with:
              node-version: 18

          - name: Cache NPM Dependencies
            uses: actions/cache@v3
            with:
                path: node_modules
                key: ${{ runner.os}}-node_modules-${{ hashFiles('package-lock.json')}}

          - name: Install dependencies
            run: npm install
          - name: check code coverage
            continue-on-error: true
            run: npm run coverage

          - name: Archive Test result
            if: always()
            uses: actions/upload-artifact@v3
            with:
              name: Teja-code-pstr-coverage
              path: coverage
              retention-days: 5
    docker:
        needs: [unit_testing, code-coverage]
        name: Containerization
        runs-on: ubuntu-latest
        steps:
          - name: Checkout Repo
            uses: actions/checkout@v4
          - name: Docker Login
            uses: docker/login-action@v2.2.0
            with:
              username: ${{ vars.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_PASSWORD }}



