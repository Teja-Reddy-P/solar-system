name: Composite Action

on:
    workflow_dispatch: 
    push: 
        branches: 
            - main
            - 'feature/*'
env:
   MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
   MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
   MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}  # Added the environment variables into repositiory level variables and secrets into github.
jobs:
    unit_testing:
        name: Unit testing
        services:
           mongo-db:
             image: siddharth67/mongo-db:non-prod
             ports:
              - 27017:27017
        env:
           MONGO_URI: 'mongodb://localhost:27017/superData'
           MONGO_USERNAME: non-prod-user
           MONGO_PASSWORD: non-prod-password #Password has to store in secrets and username has to store in variables section under repository level.
        strategy:
            matrix:
                nodejs_version: [18, 19]
                operating_system: [ubuntu-latest]
        runs-on: ${{ matrix.operating_system}}
        steps:
            - name: Checkout the Repository
              uses: actions/checkout@v4

            - name: Install Nodejs version - ${{ matrix.nodejs_version }}
              uses: actions/setup-node@v3
              with:
                node-version: ${{ matrix.nodejs_version }}
            
            - name: Composite Action - Caching and Installing NPM Packages
              uses: .github/custom-action/npm-action/action.yml
              with:
                path-to-caching: node_modules
            
            - name: Run Unit Testing
              run: npm test

            - name: Archive/Upload Artifcat
              uses: actions/upload-artifact@v3
              with:
                name: sai-test-latest-results
                path: test-results.xml

    code-coverage:
        name: Code coverage
        container: 
          image: node:18   
        services:
          mongo-db:
            image: siddharth67/mongo-db:non-prod        # Ports are not needed as both job container and service container running on runner system. Docker containers on the same user -defined bridge  network  expose all ports to each other.  
            options:
             --name mongo
        env:
           MONGO_URI: 'mongodb://mongo:27017/superData'     #I am just using mongo label name which is mentioned in before step, because container to container we can assign abel and with the help of label job container can connect to service conatiner.
           MONGO_USERNAME: non-prod-user
           MONGO_PASSWORD: non-prod-password #Password has to store in secrets and username has to store in variables section under repository level    
        runs-on: ubuntu-latest
        steps:
          - name: Checkout The Repo
            uses: actions/checkout@v4

          #- name: setup nodejs version             #(Since I was using nodejs 18 version container in code-covergae job I have commented out these steps)
           # uses: actions/setup-node@v3
            #with:
             # node-version: 18

          - name: Composite Action - Caching and Installing NPM Packages
            uses: .github/custom-action/npm-action/action.yml
            with:
               path-to-caching: node_modules
          - name: check code coverage
            continue-on-error: true
            run: npm run coverage

          - name: Archive Test result
            if: always()
            uses: actions/upload-artifact@v3
            with:
              name: Teja-code-pstr-coverage
              path: coverage
              retention-days: 5